
Class Throwable
--------------------------------

*The Throwable class is the superclass of all errors and exceptions in the Java language. Only objects  that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or  can be thrown by the Java throw statement. Similarly, only this class or one of its subclasses can be  the argument type in a catch clause.

*Instances of two subclasses, Error and Exception , are conventionally used to indicate that exceptional  situations have occurred. Typically, these instances are freshly created in the context of the  exceptional situation so as to include relevant information (such as stack trace data).

*A throwable contains a snapshot of the execution stack of its thread at the time it was created. It can  also contain a message string that gives more information about the error. Finally, it can contain a  cause : another throwable that caused this throwable to get thrown.

*One reason that a throwable may have a cause is that the class that throws it is built atop a lower  layered abstraction, and an operation on the upper layer fails due to a failure in the lower layer.
 It would be bad design to let the throwable thrown by the lower layer propagate outward, as it is  generally unrelated to the abstraction provided by the upper layer. 

*A second reason that a throwable may have a cause is that the method that throws it must conform to a  general-purpose interface that does not permit the method to throw the cause directly. For example,  suppose a persistent collection conforms to the Collection interface, and that its persistence is  implemented atop java.io . 

Throwable
------------------------------------------------------

*public Throwable()
 Constructs a new throwable with null as its detail message. The cause is not initialized, and may  subsequently be initialized by a call to initCause(java.lang.Throwable) .
 The fillInStackTrace() method is called to initialize the stack trace data in the newly created  throwable.

*public Throwable(String message)
 Constructs a new throwable with the specified detail message. The cause is not initialized, and may  subsequently be initialized by a call to initCause(java.lang.Throwable) .
 The fillInStackTrace() method is called to initialize the stack trace data in the newly created  throwable.

Parameters:
message - the detail message. The detail message is saved for later retrieval by the getMessage() method.
Throwable

*public Throwable(String message,
                 Throwable cause)
 Constructs a new throwable with the specified detail message and cause.
 Note that the detail message associated with cause is not automatically incorporated in this throwable's  detail message.

